[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "signalwire_agents"
version = "0.1.39"
description = "SignalWire AI Agents SDK"
authors = [
    {name = "SignalWire Team", email = "info@signalwire.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["signalwire", "ai", "agents", "voice", "telephony", "swaig", "swml"]
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "fastapi==0.115.12",
    "pydantic==2.11.4",
    "PyYAML==6.0.2",
    "Requests==2.32.3",
    "setuptools==66.1.1",
    "signalwire_pom==2.7.1",
    "structlog==25.3.0",
    "uvicorn==0.34.2",
    "beautifulsoup4==4.12.3",
    "pytz==2023.3",
    "lxml>=4.9.0",
]

# Optional dependencies for search functionality
[project.optional-dependencies]
# Query existing .swsearch files only (no document processing/building)
search-queryonly = [
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "sentence-transformers>=2.2.0",
    "nltk>=3.8",
]

# Full search functionality (includes document processing and building)
search = [
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8",
    "numpy>=1.24.0",
]

search-full = [
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8",
    "numpy>=1.24.0",
    # Document processing dependencies
    "pdfplumber>=0.9.0",
    "python-docx>=0.8.11",
    "markdown>=3.4.0",
    "striprtf>=0.0.26",
    "openpyxl>=3.1.0",
    "python-pptx>=0.6.21",
    "python-magic>=0.4.27",
]

# Advanced NLP (optional)
search-nlp = [
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8",
    "numpy>=1.24.0",
    "spacy>=3.6.0",
]

# All search features
search-all = [
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8",
    "numpy>=1.24.0",
    "spacy>=3.6.0",
    # Document processing dependencies
    "pdfplumber>=0.9.0",
    "python-docx>=0.8.11",
    "markdown>=3.4.0",
    "striprtf>=0.0.26",
    "openpyxl>=3.1.0",
    "python-pptx>=0.6.21",
    "python-magic>=0.4.27",
    # pgvector support
    "psycopg2-binary>=2.9.0",
    "pgvector>=0.2.0",
]

# PostgreSQL pgvector support
pgvector = [
    "psycopg2-binary>=2.9.0",
    "pgvector>=0.2.0",
]

# All optional dependencies
all = [
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8",
    "numpy>=1.24.0",
    "spacy>=3.6.0",
    # Document processing dependencies
    "pdfplumber>=0.9.0",
    "python-docx>=0.8.11",
    "markdown>=3.4.0",
    "striprtf>=0.0.26",
    "openpyxl>=3.1.0",
    "python-pptx>=0.6.21",
    "python-magic>=0.4.27",
]

[project.urls]
Homepage = "https://github.com/signalwire/signalwire-agents"

[project.scripts]
swaig-test = "signalwire_agents.cli.swaig_test_wrapper:main"
sw-search = "signalwire_agents.cli.build_search:console_entry_point"

[tool.setuptools]
packages = {find = {where = ["."], include = ["signalwire_agents*"]}}
include-package-data = true

[tool.setuptools.package-data]
signalwire_agents = [
    "schema.json",
    "**/*.json",
    "skills/*/README.md",
    "skills/README.md"
] 